{"version":3,"sources":["services/storageService.js","services/bitcoinService.js","services/utilService.js","services/userService.js","cmps/MovesList/MovesList.jsx","pages/Home/Home.jsx","store/actions/userActions.js","cmps/ContactFilter/ContactFilter.jsx","cmps/ContactPreview/ContactPreview.jsx","cmps/ContactList/ContactList.jsx","services/contactService.js","pages/Contacts/Contacts.jsx","store/actions/contactActions.js","cmps/TransferFund/TransferFund.jsx","pages/ContactDetails/ContactDetails.jsx","cmps/Charts/Charts.jsx","pages/Statistics/Statistics.jsx","cmps/AppHeader/AppHeader.jsx","pages/ContactEdit/ContactEdit.jsx","App.js","reportWebVitals.js","store/reducers/contactReducer.js","store/reducers/userReducer.js","store/index.js","index.js"],"names":["storageService","store","key","value","localStorage","JSON","stringify","load","defaultValue","parse","bitcoinService","getRate","getMarketPrice","getTradeVolume","coins","a","currency","rate","Axios","get","data","res","last","console","log","marketPrice","tradeVolume","MySwal","withReactContent","Swal","utilService","makeId","length","txt","possible","i","charAt","Math","floor","random","showMsg","msg","fire","title","toast","position","showConfirmButton","timer","userService","getUser","Promise","resolve","gUser","saveUser","userToSave","STORAGE_KEY","transferFund","transferAmount","addMove","contactId","contactName","move","_id","toId","to","at","Date","now","amount","moves","unshift","gDefultUser","name","user","_loadUser","MovesList","isHome","className","map","format","_Home","state","this","props","setUser","loadRate","setState","autoplay","loop","src","style","height","width","toLocaleString","slice","Component","mapDispatchToProps","dispatch","type","Home","connect","userReducer","ContactFilter","term","handleChange","target","field","onChangeFilter","onSubmit","ev","preventDefault","htmlFor","placeholder","id","onChange","ContactPreview","contact","alt","ContactList","contacts","contactService","query","filterBy","contactsToReturn","gContacts","filter","sort","getContactById","find","reject","deleteContact","idx","findIndex","splice","saveContact","contactToSave","push","getEmptyContact","email","phone","gDefaultContacts","_loadContacts","arr","b","toLocaleLowerCase","includes","_Contacts","loadContacts","Contacts","contactReducer","TransferFund","required","min","_ContactDetails","removeContact","history","match","params","prevProps","prevState","onClick","savedUser","ContactDetails","currContact","Charts","marketPriceData","tradeVolumeData","labels","datasets","label","vals","backgroundColor","borderColor","Statistics","loadMarketPlaceData","LoadTradeVolumeData","values","coord","y","moment","unix","x","AppHeader","withRouter","exact","activeClassName","ContactEdit","App","component","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","INITIAL_STATE","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","rootReducer","combineReducers","action","robots","savedContact","createStore","applyMiddleware","thunk","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.08f1cfe9.chunk.js","sourcesContent":["export const storageService = {\r\n    store,\r\n    load\r\n}\r\n\r\nfunction store(key, value) {\r\n    localStorage[key] = JSON.stringify(value);\r\n}\r\n\r\nfunction load(key, defaultValue = null) {\r\n    var value = localStorage[key] || defaultValue;\r\n    return JSON.parse(value);\r\n}\r\n","import Axios from 'axios'\r\nimport { storageService } from './storageService';\r\n\r\nexport const bitcoinService = {\r\n    getRate,\r\n    getMarketPrice,\r\n    getTradeVolume\r\n}\r\n\r\nasync function getRate(coins, currency = 'USD') {\r\n    const rate = storageService.load('rate');\r\n    if (rate) return rate;\r\n    try {\r\n        const { data } = await Axios.get(`https://blockchain.info/ticker`);\r\n        const res = data[currency].last * coins;\r\n        storageService.store('rate', res);\r\n        return res;\r\n    }\r\n    catch (err) {\r\n        console.log('cannot get rate', err);\r\n        throw err;\r\n    }\r\n}\r\n\r\nasync function getMarketPrice() {\r\n    const marketPrice = (storageService.load('market price'));\r\n    if (marketPrice) return marketPrice;\r\n    try {\r\n        const { data } = await Axios.get('https://api.blockchain.info/charts/market-price?timespan=5months&format=json&cors=true');\r\n        storageService.store('market price', data)\r\n        return data;\r\n    }\r\n    catch (err) {\r\n        console.log(err);\r\n    }\r\n}\r\n\r\nasync function getTradeVolume() {\r\n    const tradeVolume = (storageService.load('trade volume'));\r\n    if (tradeVolume) return tradeVolume;\r\n    try {\r\n        const { data } = await Axios.get('https://api.blockchain.info/charts/trade-volume?timespan=5months&format=json&cors=true');\r\n        storageService.store('trade volume', data)\r\n        return data;\r\n    }\r\n    catch (err) {\r\n        console.log(err);\r\n    }\r\n}","import Swal from 'sweetalert2'\r\nimport withReactContent from 'sweetalert2-react-content'\r\nconst MySwal = withReactContent(Swal)\r\n\r\nexport const utilService = {\r\n    makeId,\r\n    showMsg\r\n}\r\n\r\nfunction makeId(length = 10) {\r\n    var txt = ''\r\n    var possible = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789'\r\n    for (var i = 0; i < length; i++) {\r\n      txt += possible.charAt(Math.floor(Math.random() * possible.length))\r\n    }\r\n    return txt\r\n  }\r\n\r\nfunction showMsg(msg){\r\n    MySwal.fire({\r\n  title: <p>{msg}</p>,\r\n  toast: true,\r\n  position: 'bottom-right',\r\n  showConfirmButton: false,\r\n  timer: 2000\r\n    })\r\n}\r\n","import { storageService } from './storageService.js'\r\nimport { utilService } from './utilService.js'\r\n\r\nexport const userService = {\r\n    getUser,\r\n    saveUser,\r\n    transferFund,\r\n    addMove\r\n}\r\n\r\n///only support 1 hard coded user for now\r\n///TODO: support muiltiple users\r\n\r\nconst STORAGE_KEY = 'user'\r\nconst gDefultUser = {\r\n    name: \"Guest\",\r\n    coins: 500,\r\n    moves: []\r\n}\r\n\r\nvar gUser = _loadUser();\r\n\r\nfunction getUser() {\r\n    return Promise.resolve({ ...gUser });\r\n}\r\n\r\nfunction saveUser(userToSave) {\r\n    gUser = userToSave;\r\n    storageService.store(STORAGE_KEY, gUser)\r\n    return Promise.resolve({ ...gUser });\r\n}\r\n\r\n\r\nfunction transferFund(transferAmount) {\r\n    gUser.coins -= transferAmount;\r\n    storageService.store(STORAGE_KEY, gUser)\r\n    return Promise.resolve({ ...gUser });\r\n}\r\n\r\nfunction addMove(contactId, contactName, transferAmount) {\r\n    const move = {\r\n        _id: utilService.makeId(),\r\n        toId: contactId,\r\n        to: contactName,\r\n        at: Date.now(),\r\n        amount: transferAmount,\r\n    }\r\n    gUser.moves.unshift(move);\r\n    storageService.store(STORAGE_KEY, gUser)\r\n    return Promise.resolve({ ...gUser });\r\n}\r\n\r\nfunction _loadUser() {\r\n    let user = storageService.load(STORAGE_KEY)\r\n    if (!user) user = gDefultUser\r\n    storageService.store(STORAGE_KEY, user)\r\n    return user\r\n}\r\n\r\n","import './MovesList.scss'\nimport Moment from 'react-moment';\n\nexport const MovesList = ({ moves, isHome }) => {\n    if (!moves?.length) return <div className=\"moves-list\">No activity yet</div>\n    return (\n        <section className=\"moves-list\">\n            <ul>\n                {moves.map(move => (\n                    <li className=\"activity-preview\" key={move._id}>\n                        {isHome && <p className=\"acticity-title\"> To {move.to}</p>}\n                        <p>{move.amount}฿ </p>\n                        <Moment className=\"activity-date\" format=\"DD/MM/YY, h:mma\">{move.at}</Moment>\n                    </li>\n                ))}\n            </ul>\n        </section>\n    )\n}\n\n","\nimport './Home.scss'\n\nimport { Component } from 'react'\nimport { bitcoinService } from '../../services/bitcoinService'\nimport { connect } from 'react-redux';\nimport { setUser } from '../../store/actions/userActions';\nimport { MovesList } from '../../cmps/MovesList'\nimport { Player } from '@lottiefiles/react-lottie-player';\n\n\nclass _Home extends Component {\n    state = {\n        rate: null\n    }\n    async componentDidMount() {\n        await this.props.setUser();\n        this.loadRate();\n    }\n\n    async loadRate() {\n        const rate = await bitcoinService.getRate(this.props.user.coins);\n        this.setState({ rate })\n    }\n    render() {\n        const { user } = this.props\n        const { rate } = this.state\n        return (\n            user && rate && (\n                <section className=\"home\">\n                    <div>\n                        <Player\n                            autoplay\n                            loop\n                            src=\"https://assets3.lottiefiles.com/packages/lf20_ltbqacam.json\"\n                            style={{ height: '300px', width: '300px' }}\n                        >\n                        </Player>\n                        <h3>Welcome, {user.name} </h3>\n                        <div className=\"balance-container\">\n                            <h4 className=\"subtitle\">Current balance</h4>\n                            <p> BIT: <span className=\"bitcoin-balance\"> ฿ {user.coins.toLocaleString()}  </span></p>\n                            <p> USD: $ {rate.toLocaleString()} </p>\n                        </div>\n                    </div>\n                    <hr />\n                    <h4 className=\"subtitle\">Recent activity</h4>\n                    <MovesList moves={user.moves.slice(0, 5)} isHome=\"true\" />\n                </section>\n            )\n        );\n    }\n}\n\nconst mapStateToProps = state => ({\n    user: state.userReducer.user\n})\n\nconst mapDispatchToProps = {\n    setUser\n}\n\nexport const Home = connect(mapStateToProps, mapDispatchToProps)(_Home)","import { userService } from '../../services/userService'\r\n\r\n// Thunk - Action Dispatcher\r\n\r\nexport function setUser() {\r\n    return async dispatch => {\r\n        const user = await userService.getUser()\r\n        dispatch({ type: 'SET_USER', user })\r\n    }\r\n}\r\n\r\nexport function saveUser(user) {\r\n    return async dispatch => {\r\n        const savedUser = await userService.saveUser(user)\r\n        dispatch({ type: 'SET_USER', user: savedUser })\r\n    }\r\n}\r\n\r\nexport function transferFund(contactId, transferAmount) {\r\n    return async (dispatch) => {\r\n        const savedUser = await userService.transferFund(transferAmount)\r\n        dispatch({ type: 'SET_USER', user: savedUser })\r\n    }\r\n}\r\n\r\nexport function addMove(contactId, contactName, transferAmount) {\r\n    return async (dispatch) => {\r\n        const savedUser = await userService.addMove(contactId, contactName, transferAmount)\r\n        dispatch({ type: 'SET_USER', user: savedUser })\r\n    }\r\n}","import { Component } from 'react'\nimport './ContactFilter.scss';\n\n\nexport class ContactFilter extends Component {\n    state = {\n        term: ''\n    };\n\n    handleChange = ({ target }) => {\n        const field = target.name;\n        const value = target.type === 'number' ? +target.value : target.value;\n        this.setState({ [field]: value }, () => {\n            this.props.onChangeFilter({ ...this.state })\n        })\n\n    }\n    render() {\n        const { term } = this.state\n        return (\n            <form className=\"contact-filter\" onSubmit={(ev) => ev.preventDefault()}>\n                <label htmlFor=\"term\"></label>\n                <input className=\"clean-input\" placeholder=\"Search by name, phone or mail\" id=\"term\" name=\"term\" value={term} onChange={this.handleChange} />\n            </form>\n        )\n    }\n}\n\n","import { Link } from 'react-router-dom'\nimport './ContactPreview.scss'\n\nexport function ContactPreview({ contact }) {\n    return (\n        <Link to={'/contact/' + contact._id}>\n            <div className=\"contact-preview\">\n                <img className=\"contact-img\" src={`https://robohash.org/${contact._id}.png`} alt=\"contact-img\" />\n                {contact.name}\n            </div>\n        </Link>\n    )\n\n}\n","import React from 'react';\nimport { ContactPreview } from '../ContactPreview'\n\nimport './ContactList.scss'\n\nexport function ContactList({ contacts }) {\n    return (\n        contacts &&\n        <section>\n            <ul className=\"contact-list\">\n                {contacts.map(contact => (\n                    <ContactPreview\n                        contact={contact}\n                        key={contact._id}\n                    />\n                ))}\n            </ul>\n        </section>\n    )\n\n}\n","import { storageService } from './storageService.js'\nimport { utilService } from './utilService.js'\n\nexport const contactService = {\n  query,\n  getContactById,\n  deleteContact,\n  saveContact,\n  getEmptyContact\n}\n\nconst STORAGE_KEY = 'contacts'\nconst gDefaultContacts = [\n  {\n    \"_id\": \"5a56640269f443a5d64b32ca\",\n    \"name\": \"Ochoa Hyde\",\n    \"email\": \"ochoahyde@renovize.com\",\n    \"phone\": \"+1 (968) 593-3824\",\n  },\n  {\n    \"_id\": \"5a5664025f6ae9aa24a99fde\",\n    \"name\": \"Hallie Mclean\",\n    \"email\": \"halliemclean@renovize.com\",\n    \"phone\": \"+1 (948) 464-2888\",\n  },\n  {\n    \"_id\": \"5a56640252d6acddd183d319\",\n    \"name\": \"Parsons Norris\",\n    \"email\": \"parsonsnorris@renovize.com\",\n    \"phone\": \"+1 (958) 502-3495\",\n  },\n  {\n    \"_id\": \"5a566402ed1cf349f0b47b4d\",\n    \"name\": \"Rachel Lowe\",\n    \"email\": \"rachellowe@renovize.com\",\n    \"phone\": \"+1 (911) 475-2312\",\n  }\n];\n\nvar gContacts = _loadContacts();\n\nfunction sort(arr) {\n  return arr.sort((a, b) => {\n    if (a.name.toLocaleLowerCase() < b.name.toLocaleLowerCase()) {\n      return -1;\n    }\n    if (a.name.toLocaleLowerCase() > b.name.toLocaleLowerCase()) {\n      return 1;\n    }\n\n    return 0;\n  })\n}\n\n//// TODO: contacts come from logged user's contacts array\n\nfunction query(filterBy = null) {\n  let contactsToReturn = gContacts;\n  if (filterBy && filterBy.term) {\n    contactsToReturn = filter(filterBy.term)\n  }\n  return Promise.resolve(sort(contactsToReturn));\n}\n\nfunction getContactById(id) {\n  const contact = gContacts.find(contact => contact._id === id)\n  if (!contact) return Promise.reject()\n  return Promise.resolve({ ...contact })\n}\n\nfunction deleteContact(id) {\n  const idx = gContacts.findIndex(contact => contact._id === id)\n  if (idx !== -1) gContacts.splice(idx, 1)\n  storageService.store(STORAGE_KEY, gContacts)\n  return Promise.resolve(gContacts)\n}\n\nfunction saveContact(contactToSave) {\n  if (contactToSave._id) {\n    const idx = gContacts.findIndex(contact => contact._id === contactToSave._id)\n    gContacts.splice(idx, 1, contactToSave)\n  } else {\n    contactToSave._id = utilService.makeId()\n    gContacts.push(contactToSave)\n  }\n  storageService.store(STORAGE_KEY, gContacts)\n  return Promise.resolve(contactToSave);\n}\n\nfunction getEmptyContact() {\n  return {\n    name: '',\n    email: '',\n    phone: ''\n  }\n}\n\nfunction filter(term) {\n  term = term.toLocaleLowerCase()\n  return gContacts.filter(contact => {\n    return contact.name.toLocaleLowerCase().includes(term) ||\n      contact.phone.toLocaleLowerCase().includes(term) ||\n      contact.email.toLocaleLowerCase().includes(term)\n  })\n}\n\n\nfunction _loadContacts() {\n  let contacts = storageService.load(STORAGE_KEY)\n  if (!contacts || !contacts.length) contacts = gDefaultContacts\n  storageService.store(STORAGE_KEY, contacts)\n  return contacts\n}\n\n\n","\nimport { Component } from 'react'\nimport { ContactFilter } from '../../cmps/ContactFilter'\nimport { ContactList } from '../../cmps/ContactList'\nimport { connect } from 'react-redux';\nimport { loadContacts } from '../../store/actions/contactActions';\n\nimport './Contacts.scss'\nimport { Link } from 'react-router-dom'\n\nclass _Contacts extends Component {\n    state = {\n        filterBy: null\n    }\n\n    componentDidMount() {\n        this.props.loadContacts();\n    }\n\n\n    onChangeFilter = (filterBy) => {\n        this.props.loadContacts(filterBy);\n    }\n    render() {\n        const { contacts } = this.props\n        return (\n            contacts &&\n            <div className=\"contact-page\">\n                <ContactFilter onChangeFilter={this.onChangeFilter} />\n                <ContactList\n                    contacts={contacts}\n                />\n                <Link to=\"/contact/edit\" ><button className=\"add-contact\">+</button></Link>\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = state => ({\n    contacts: state.contactReducer.contacts\n})\n\nconst mapDispatchToProps = {\n    loadContacts\n}\n\nexport const Contacts = connect(mapStateToProps, mapDispatchToProps)(_Contacts)","import { contactService } from '../../services/contactService'\r\n\r\n// Thunk - Action Dispatcher\r\n\r\nexport function loadContacts(filterBy) {\r\n  return async dispatch => {\r\n    const contacts = await contactService.query(filterBy)\r\n    dispatch({ type: 'SET_CONTACTS', contacts })\r\n  }\r\n}\r\n\r\nexport function getContactById(contactId) {\r\n  return async dispatch => {\r\n    const contact = await contactService.getContactById(contactId)\r\n    dispatch({ type: 'SET_CONTACT', contact })\r\n  }\r\n}\r\n\r\nexport function saveContact(contact) {\r\n  return async dispatch => {\r\n    const isAdd = !contact._id\r\n    const savedContact = await contactService.saveContact(contact)\r\n\r\n    if (isAdd) dispatch({ type: 'ADD_CONTACT', contact: savedContact })\r\n    else dispatch({ type: 'UPDATE_CONTACT', savedContact })\r\n  }\r\n}\r\n\r\nexport function removeContact(contactId) {\r\n  return async dispatch => {\r\n    await contactService.deleteContact(contactId)\r\n    dispatch({ type: 'REMOVE_CONTACT', contactId })\r\n  }\r\n}\r\n\r\n","import { Component } from 'react'\n\nimport './TransferFund.scss'\n\nexport class TransferFund extends Component {\n\n    state = {\n        transferAmount: ''\n    }\n\n    handleChange = ({ target }) => {\n        this.setState({ transferAmount: +target.value })\n    }\n\n    transferFund = async (ev) => {\n        ev.preventDefault();\n        this.props.transferFund(this.state.transferAmount);\n        this.state.transferAmount = '';\n    }\n\n    render() {\n        const { transferAmount } = this.state\n        const { contactName } = this.props\n        return (\n            <form className=\"transfer-fund\" onSubmit={this.transferFund}>\n                <h3>Wanna transfer coins to {contactName}? </h3>\n                <label htmlFor=\"transferAmount\"></label>\n                <input required\n                    placeholder=\"Amount to transfer\"\n                    min=\"1\"\n                    type=\"number\" id=\"transferAmount\" value={transferAmount} onChange={this.handleChange} name=\"transferAmount\" />\n\n                <button className=\"purple-btn font-large\">Send</button>\n            </form>\n        )\n    }\n}\n","import { Component } from 'react'\nimport { Link } from 'react-router-dom';\nimport { TransferFund } from '../../cmps/TransferFund/TransferFund';\nimport { connect } from 'react-redux';\nimport { getContactById, removeContact } from '../../store/actions/contactActions';\nimport { transferFund, addMove } from '../../store/actions/userActions';\nimport { MovesList } from '../../cmps/MovesList';\nimport { utilService } from '../../services/utilService'\n\nimport './ContactDetails.scss'\n\nclass _ContactDetails extends Component {\n\n    componentDidMount() {\n        this.props.getContactById(this.props.match.params.id)\n    }\n\n    componentDidUpdate(prevProps, prevState) {\n        if (prevProps.match.params.id !== this.props.match.params.id) {\n            this.props.getContactById(this.props.match.params.id)\n        }\n    }\n\n    removeContact = async () => {\n        await this.props.removeContact(this.props.contact._id)\n        this.props.history.push('/contacts')\n    }\n\n    transferFund = (amount) => {\n        if (amount > this.props.user.coins) return utilService.showMsg('Not enough balance')\n        if (amount <= 0) return utilService.showMsg('Please enter a number higher than 0')\n\n        this.props.transferFund(this.props.contact._id, amount)\n        this.props.addMove(this.props.contact._id, this.props.contact.name, amount)\n\n        utilService.showMsg(`Transfered ${amount} bitcoins to ${this.props.contact.name} successfuly`)\n    }\n\n\n\n    render() {\n        const { contact, user } = this.props\n        return (\n            contact &&\n            <section className=\"contact-details\">\n                <img className=\"contact-img\" src={`https://robohash.org/${contact._id}.png`} alt=\"contact-img\" />\n\n                <div className=\"info-container container\">\n                    <h4>{contact.name}</h4>\n                    <p>{contact.email}</p>\n                    <p>{contact.phone}</p>\n                </div>\n\n                <div className=\"actions-container container\">\n                    <button className=\"purple-btn\">\n                        <Link to={'/contact/edit/' + contact._id}><i className=\"fas fa-pen\"></i> Edit</Link> </button>\n                    <button className=\"purple-btn\" onClick={this.removeContact}><i className=\"far fa-trash-alt\"></i> Delete</button>\n                </div>\n                <TransferFund transferFund={this.transferFund} contactName={contact.name} />\n                <h5 className=\"subtitle\">Your transfers to {contact.name}</h5>\n                <MovesList moves={user?.moves.filter(move => move.toId === contact._id)} />\n            </section>\n        )\n    }\n}\n\n\nconst mapStateToProps = state => ({\n    contact: state.contactReducer.currContact,\n    user: state.userReducer.user\n})\n\nconst mapDispatchToProps = {\n    getContactById, removeContact, transferFund, addMove\n}\n\nexport const ContactDetails = connect(mapStateToProps, mapDispatchToProps)(_ContactDetails)","import {\n    Line\n}\n\nfrom 'react-chartjs-2';\nimport './Charts.scss'\n\nexport function Charts( {\n        marketPriceData, tradeVolumeData\n    }\n\n) {\n    return (<section> {\n            marketPriceData && <div className=\"chart-container\"> <h2>Market Price</h2> <Line data= {\n                    {\n                    labels: marketPriceData.labels,\n                    datasets: [ {\n                        label: 'Market Price',\n                        data: marketPriceData.vals,\n                        backgroundColor: '#a8a8a82c',\n                        borderColor: '#cf9d3f'\n                    }\n                    ]\n                }\n            }\n            /> </div>\n        }\n\n            {\n            tradeVolumeData && <div className=\"chart-container\"> <h2>Trade Volume</h2> <Line data= {\n                    {\n                    labels: tradeVolumeData.labels,\n                    datasets: [ {\n                        label: 'Trade Volume',\n                        data: tradeVolumeData.vals,\n                        backgroundColor: '#a8a8a82c',\n                        borderColor: '#cf9d3f'\n                    }\n                    ]\n                }\n            }\n            /> </div>\n        }\n\n        </section >)\n}","\nimport { Component } from 'react'\nimport { bitcoinService } from '../../services/bitcoinService'\nimport { Charts } from '../../cmps/Charts'\nimport moment from 'moment'\nimport './Statistics.scss'\n\nexport class Statistics extends Component {\n    state = {\n        marketPriceData: null,\n        tradeVolumeData: null\n    }\n    componentDidMount() {\n        this.loadMarketPlaceData();\n        this.LoadTradeVolumeData();\n    }\n\n\n    async loadMarketPlaceData() {\n        const data = await bitcoinService.getMarketPrice();\n        const marketPriceData = {};\n        marketPriceData.vals = data.values.map(coord => coord.y);\n        marketPriceData.labels = data.values.map(coord => moment.unix(coord.x).format(\"MMM DD, YY\"))\n        this.setState({ marketPriceData })\n    }\n    async LoadTradeVolumeData() {\n        const data = await bitcoinService.getTradeVolume();\n        const tradeVolumeData = {};\n        tradeVolumeData.vals = data.values.map(coord => coord.y);\n        tradeVolumeData.labels = data.values.map(coord => moment.unix(coord.x).format(\"MMM DD, YY\"))\n        this.setState({ tradeVolumeData })\n    }\n\n    render() {\n        const { marketPriceData, tradeVolumeData } = this.state\n        return (\n            <div>\n                <Charts marketPriceData={marketPriceData}\n                    tradeVolumeData={tradeVolumeData}\n                />\n            </div>\n        )\n    }\n}\n","\n\nimport { NavLink, withRouter } from 'react-router-dom'\nimport './AppHeader.scss'\n\nconst _AppHeader = (props) => {\n\n    return (\n        <div className=\"app-header\">\n            <NavLink exact to=\"/\" >\n                <h1 className=\"logo\" >Mr.฿itCoin</h1>\n            </NavLink>\n            <ul>\n                <li><NavLink to=\"/contacts\" activeClassName=\"active-nav\" >Contacts</NavLink></li>\n                <li><NavLink to=\"/statistics\" activeClassName=\"active-nav\">Statistics</NavLink></li>\n            </ul>\n        </div>\n    )\n}\n\nexport const AppHeader = withRouter(_AppHeader)\n","\nimport { Component } from 'react'\nimport { contactService } from '../../services/contactService';\n\nimport './ContactEdit.scss'\n\nexport class ContactEdit extends Component {\n\n    state = {\n        contact: null\n    }\n\n    async componentDidMount() {\n        const { id } = this.props.match.params;\n        try {\n            const contact = id ? await contactService.getContactById(id) : contactService.getEmptyContact();\n            this.setState({ contact })\n        }\n        catch (err) {\n            console.log(err);\n        }\n    }\n\n    handleChange = ({ target }) => {\n        const field = target.name\n        const value = target.type === 'number' ? +target.value : target.value\n        this.setState((prevState) => ({ contact: { ...prevState.contact, [field]: value } }))\n    }\n\n    saveContact = async (ev) => {\n        ev.preventDefault()\n        await contactService.saveContact(this.state.contact);\n        this.props.history.push('/contacts');\n    }\n    render() {\n        if (!this.state.contact) return <div>Loading</div>\n\n        const { name, email, phone } = this.state.contact\n        return (\n            <section className=\"contact-edit\">\n                <form className='edit-form' onSubmit={this.saveContact}>\n\n                    <label htmlFor=\"name\"></label>\n                    <input\n                        className=\"clean-input w-full font-large\" required placeholder=\"Name\" type=\"text\" id=\"name\" value={name} onChange={this.handleChange} name=\"name\" />\n\n                    <label htmlFor=\"email\"></label>\n                    <input\n                        className=\"clean-input w-full font-large\"\n                        required placeholder=\"Email\" type=\"email\" id=\"email\" value={email} onChange={this.handleChange} name=\"email\" />\n\n                    <label htmlFor=\"phone\"></label>\n                    <input\n                        className=\"clean-input w-full font-large\"\n                        required placeholder=\"Phone\" type=\"phone\" id=\"phone\" value={phone} onChange={this.handleChange} name=\"phone\" />\n\n                    <button className=\"purple-btn font-large w-80\">Save</button>\n                </form>\n            </section>\n        )\n    }\n}\n","import { HashRouter as Router, Route, Switch } from 'react-router-dom';\nimport './App.scss';\nimport { Home } from './pages/Home'\nimport { Contacts } from './pages/Contacts'\nimport { ContactDetails } from './pages/ContactDetails';\nimport { Statistics } from './pages/Statistics';\nimport { AppHeader } from './cmps/AppHeader'\nimport { ContactEdit } from './pages/ContactEdit/ContactEdit';\n\nfunction App() {\n  //// load user from local storage\n  return (\n    <Router>\n      <div className=\"App\">\n        <AppHeader />\n        <Switch>\n          <Route component={ContactEdit} path='/contact/edit/:id?' />\n          <Route component={ContactDetails} path='/contact/:id' />\n          <Route component={Contacts} path='/contacts' />\n          <Route component={Statistics} path='/statistics' />\n          <Route component={Home} path='/' />\n        </Switch>\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","const INITIAL_STATE = {\r\n    contacts: [],\r\n    currContact: null\r\n  }\r\n  \r\n  export function contactReducer(state = INITIAL_STATE, action) {\r\n  \r\n    switch (action.type) {\r\n      case 'SET_CONTACTS':\r\n        return {\r\n          ...state,\r\n          contacts: action.contacts\r\n        }\r\n      case 'SET_CONTACT':\r\n        return {\r\n          ...state,\r\n          currContact: action.contact\r\n        }\r\n      case 'ADD_CONTACT':\r\n        return {\r\n          ...state,\r\n          contacts: [...state.contacts, action.contact]\r\n        }\r\n      case 'REMOVE_CONTACT':\r\n        return {\r\n          ...state,\r\n          robots: state.contacts.filter(contact => contact._id !== action.contactId)\r\n        }\r\n      case 'UPDATE_CONTACT':\r\n        const { savedContact } = action\r\n        return {\r\n          ...state,\r\n          contacts: state.contacts.map(contact => contact._id === savedContact._id ? savedContact : contact)\r\n        }\r\n      default:\r\n        return state\r\n    }\r\n  }","const INITIAL_STATE = {\r\n  user: null\r\n}\r\nexport function userReducer(state = INITIAL_STATE, action) {\r\n  switch (action.type) {\r\n    case 'SET_USER':\r\n      return {\r\n        ...state,\r\n        user: action.user\r\n      }\r\n    case 'TRANSFER_COINS':\r\n      return {\r\n        ...state,\r\n        user: { ...state.user, coins: state.user.coins - action.transferAmount }\r\n      }\r\n\r\n    default:\r\n      return state\r\n  }\r\n}","import { applyMiddleware, combineReducers, compose, createStore } from 'redux';\r\nimport thunk from 'redux-thunk'\r\nimport { contactReducer } from './reducers/contactReducer';\r\nimport { userReducer } from './reducers/userReducer';\r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose\r\n\r\nconst rootReducer = combineReducers({\r\n    contactReducer,\r\n    userReducer\r\n})\r\n\r\nexport const store = createStore(rootReducer, composeEnhancers(applyMiddleware(thunk)))","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nimport { Provider } from 'react-redux';\nimport { store } from './store';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}